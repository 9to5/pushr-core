#!/usr/bin/env ruby
require 'rubygems'
require 'bundler/setup'
Bundler.require

require 'optparse'
require 'pushr/core'
require 'pushr/daemon'

settings = Pushr::Daemon::Settings.new
banner = 'Usage: pushr [options]'
ARGV.options do |opts|
  opts.banner = banner

  opts.on('-f', '--foreground', 'Run in the foreground. Log is not written.') do
    settings.foreground = true
  end

  opts.on('-c FILE', '--configuration FILE', 'Get the configuration from this YAML file') do |file|
    settings.configuration_file = file
  end

  opts.on('-p PATH', '--pid-file PATH', String,
          'Path to write PID file. Relative to current directory unless absolute.') do |path|
            settings.pid_file = path
          end

  opts.on('-b PATH', '--feedback-processor PATH', String,
          "Path to the feedback processor. Default: none. Example: 'lib/pushr/feedback_processor'") do |n|
            settings.feedback_processor = n
          end

  opts.on('-s PATH', '--stats-processor PATH', String,
          "Path to the stats processor. Default: none. Example: 'lib/pushr/stats_processor'") do |n|
            settings.stats_processor = n
          end

  opts.on('-v', '--version', 'Print this version of pushr.') do
    puts "pushr #{Pushr::VERSION}"
    exit
  end

  opts.on('-h', '--help', 'You\'re looking at it.') do
    puts opts
    exit
  end

  opts.parse!
end

if ENV['AIRBRAKE_API_KEY']
  require 'airbrake'
  settings.error_notification = true
  Airbrake.configure do |airbrake|
    airbrake.api_key = ENV['AIRBRAKE_API_KEY']
    airbrake.host    = ENV['AIRBRAKE_HOST']
    airbrake.port    = ENV['AIRBRAKE_PORT'] ? ENV['AIRBRAKE_PORT'].to_i : 80
    airbrake.secure  = airbrake.port == 443
  end
end

Pushr::Daemon.start(settings)
